// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *TaxonomyClassificationDataSourceModel) RefreshFromSharedTaxonomyClassification(resp *shared.TaxonomyClassification) {
	if resp != nil {
		if resp.Manifest != nil {
			r.Manifest = make([]types.String, 0, len(resp.Manifest))
			for _, v := range resp.Manifest {
				r.Manifest = append(r.Manifest, types.StringValue(v))
			}
		}
		if resp.CreatedAt != nil {
			r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		} else {
			r.CreatedAt = types.StringNull()
		}
		r.ID = types.StringPointerValue(resp.ID)
		r.Name = types.StringValue(resp.Name)
		r.Parents = make([]types.String, 0, len(resp.Parents))
		for _, v := range resp.Parents {
			r.Parents = append(r.Parents, types.StringValue(v))
		}
		r.Slug = types.StringPointerValue(resp.Slug)
		if resp.UpdatedAt != nil {
			r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.UpdatedAt = types.StringNull()
		}
	}
}
