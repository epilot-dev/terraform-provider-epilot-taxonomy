// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
)

type Activity struct {
	// Message for activity. Supports handlebars syntax.
	Message string         `json:"message"`
	Payload map[string]any `json:"payload,omitempty"`
	// Indicates whether the activity is in the pending state.
	// Pending activities are not yet visible in the activity feed and events are not yet dispatched.
	//
	Pending *bool `default:"false" json:"pending"`
	// Title for activity. Supports handlebars syntax.
	Title string `json:"title"`
	Type  string `json:"type"`
}

func (a Activity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Activity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"message", "title", "type"}); err != nil {
		return err
	}
	return nil
}

func (a *Activity) GetMessage() string {
	if a == nil {
		return ""
	}
	return a.Message
}

func (a *Activity) GetPayload() map[string]any {
	if a == nil {
		return nil
	}
	return a.Payload
}

func (a *Activity) GetPending() *bool {
	if a == nil {
		return nil
	}
	return a.Pending
}

func (a *Activity) GetTitle() string {
	if a == nil {
		return ""
	}
	return a.Title
}

func (a *Activity) GetType() string {
	if a == nil {
		return ""
	}
	return a.Type
}
