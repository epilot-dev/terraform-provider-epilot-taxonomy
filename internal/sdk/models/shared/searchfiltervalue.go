// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
)

type SearchFilterValueType string

const (
	SearchFilterValueTypeStr     SearchFilterValueType = "str"
	SearchFilterValueTypeNumber  SearchFilterValueType = "number"
	SearchFilterValueTypeBoolean SearchFilterValueType = "boolean"
)

// SearchFilterValue - A filter field value.
type SearchFilterValue struct {
	Str     *string  `queryParam:"inline" name:"SearchFilterValue"`
	Number  *float64 `queryParam:"inline" name:"SearchFilterValue"`
	Boolean *bool    `queryParam:"inline" name:"SearchFilterValue"`

	Type SearchFilterValueType
}

func CreateSearchFilterValueStr(str string) SearchFilterValue {
	typ := SearchFilterValueTypeStr

	return SearchFilterValue{
		Str:  &str,
		Type: typ,
	}
}

func CreateSearchFilterValueNumber(number float64) SearchFilterValue {
	typ := SearchFilterValueTypeNumber

	return SearchFilterValue{
		Number: &number,
		Type:   typ,
	}
}

func CreateSearchFilterValueBoolean(boolean bool) SearchFilterValue {
	typ := SearchFilterValueTypeBoolean

	return SearchFilterValue{
		Boolean: &boolean,
		Type:    typ,
	}
}

func (u *SearchFilterValue) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, nil); err == nil {
		u.Str = &str
		u.Type = SearchFilterValueTypeStr
		return nil
	}

	var number float64 = float64(0)
	if err := utils.UnmarshalJSON(data, &number, "", true, nil); err == nil {
		u.Number = &number
		u.Type = SearchFilterValueTypeNumber
		return nil
	}

	var boolean bool = false
	if err := utils.UnmarshalJSON(data, &boolean, "", true, nil); err == nil {
		u.Boolean = &boolean
		u.Type = SearchFilterValueTypeBoolean
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SearchFilterValue", string(data))
}

func (u SearchFilterValue) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Number != nil {
		return utils.MarshalJSON(u.Number, "", true)
	}

	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	return nil, errors.New("could not marshal union type SearchFilterValue: all fields are null")
}
