// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"time"
)

// EntityItemACL - Access control list (ACL) for an entity. Defines sharing access to external orgs or users.
type EntityItemACL struct {
	AdditionalProperties any      `additionalProperties:"true" json:"-"`
	Delete               []string `json:"delete,omitempty"`
	Edit                 []string `json:"edit,omitempty"`
	View                 []string `json:"view,omitempty"`
}

func (e EntityItemACL) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EntityItemACL) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *EntityItemACL) GetAdditionalProperties() any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *EntityItemACL) GetDelete() []string {
	if o == nil {
		return nil
	}
	return o.Delete
}

func (o *EntityItemACL) GetEdit() []string {
	if o == nil {
		return nil
	}
	return o.Edit
}

func (o *EntityItemACL) GetView() []string {
	if o == nil {
		return nil
	}
	return o.View
}

type EntityItem struct {
	AdditionalProperties any            `additionalProperties:"true" json:"-"`
	ACL                  *EntityItemACL `json:"_acl,omitempty"`
	CreatedAt            *time.Time     `json:"_created_at"`
	DeletedAt            *time.Time     `json:"_deleted_at,omitempty"`
	ID                   string         `json:"_id"`
	// Manifest ID used to create/update the entity
	Manifest []string `json:"_manifest,omitempty"`
	// Organization Id the entity belongs to
	Org     string        `json:"_org"`
	Owners  []EntityOwner `json:"_owners,omitempty"`
	Purpose []string      `json:"_purpose,omitempty"`
	// URL-friendly identifier for the entity schema
	Schema string   `json:"_schema"`
	Tags   []string `json:"_tags,omitempty"`
	// Title of entity
	Title     *string    `json:"_title"`
	UpdatedAt *time.Time `json:"_updated_at"`
}

func (e EntityItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EntityItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"_created_at", "_id", "_org", "_schema", "_title", "_updated_at"}); err != nil {
		return err
	}
	return nil
}

func (o *EntityItem) GetAdditionalProperties() any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *EntityItem) GetACL() *EntityItemACL {
	if o == nil {
		return nil
	}
	return o.ACL
}

func (o *EntityItem) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *EntityItem) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *EntityItem) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *EntityItem) GetManifest() []string {
	if o == nil {
		return nil
	}
	return o.Manifest
}

func (o *EntityItem) GetOrg() string {
	if o == nil {
		return ""
	}
	return o.Org
}

func (o *EntityItem) GetOwners() []EntityOwner {
	if o == nil {
		return nil
	}
	return o.Owners
}

func (o *EntityItem) GetPurpose() []string {
	if o == nil {
		return nil
	}
	return o.Purpose
}

func (o *EntityItem) GetSchema() string {
	if o == nil {
		return ""
	}
	return o.Schema
}

func (o *EntityItem) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *EntityItem) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *EntityItem) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
