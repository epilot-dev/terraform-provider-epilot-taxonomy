// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// Schema - The value of the failing keyword in the schema.
type Schema struct {
}

type EntityValidationV2Error struct {
	// The data validated by the keyword.
	Data map[string]any `json:"data,omitempty"`
	// JSON Pointer to the location in the data instance (e.g., `"/prop/1/subProp"`).
	InstancePath string `json:"instance_path"`
	// validation keyword.
	Keyword string `json:"keyword"`
	// The error message.
	Message *string `json:"message,omitempty"`
	// Additional information about error.
	Params map[string]any `json:"params"`
	// The schema containing the keyword.
	ParentSchema map[string]any `json:"parent_schema,omitempty"`
	// Set for errors in `propertyNames` keyword schema. `instance_path` still points to the object in this case.
	PropertyName *string `json:"property_name,omitempty"`
	// The value of the failing keyword in the schema.
	Schema *Schema `json:"schema,omitempty"`
	// JSON Pointer to the location of the failing keyword in the schema.
	SchemaPath string `json:"schema_path"`
}

func (o *EntityValidationV2Error) GetData() map[string]any {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *EntityValidationV2Error) GetInstancePath() string {
	if o == nil {
		return ""
	}
	return o.InstancePath
}

func (o *EntityValidationV2Error) GetKeyword() string {
	if o == nil {
		return ""
	}
	return o.Keyword
}

func (o *EntityValidationV2Error) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *EntityValidationV2Error) GetParams() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.Params
}

func (o *EntityValidationV2Error) GetParentSchema() map[string]any {
	if o == nil {
		return nil
	}
	return o.ParentSchema
}

func (o *EntityValidationV2Error) GetPropertyName() *string {
	if o == nil {
		return nil
	}
	return o.PropertyName
}

func (o *EntityValidationV2Error) GetSchema() *Schema {
	if o == nil {
		return nil
	}
	return o.Schema
}

func (o *EntityValidationV2Error) GetSchemaPath() string {
	if o == nil {
		return ""
	}
	return o.SchemaPath
}
