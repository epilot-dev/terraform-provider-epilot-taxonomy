// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
)

type AttributeInputType string

const (
	AttributeInputTypeTextAttribute                  AttributeInputType = "TextAttribute"
	AttributeInputTypeLinkAttribute                  AttributeInputType = "LinkAttribute"
	AttributeInputTypeDateAttribute                  AttributeInputType = "DateAttribute"
	AttributeInputTypeCountryAttribute               AttributeInputType = "CountryAttribute"
	AttributeInputTypeBooleanAttribute               AttributeInputType = "BooleanAttribute"
	AttributeInputTypeSelectAttribute                AttributeInputType = "SelectAttribute"
	AttributeInputTypeMultiSelectAttribute           AttributeInputType = "MultiSelectAttribute"
	AttributeInputTypeStatusAttribute                AttributeInputType = "StatusAttribute"
	AttributeInputTypeSequenceAttribute              AttributeInputType = "SequenceAttribute"
	AttributeInputTypeRelationAttributeInput         AttributeInputType = "RelationAttribute_input"
	AttributeInputTypeUserRelationAttribute          AttributeInputType = "UserRelationAttribute"
	AttributeInputTypeAddressRelationAttribute       AttributeInputType = "AddressRelationAttribute"
	AttributeInputTypePaymentMethodRelationAttribute AttributeInputType = "PaymentMethodRelationAttribute"
	AttributeInputTypeCurrencyAttribute              AttributeInputType = "CurrencyAttribute"
	AttributeInputTypeRepeatableAttribute            AttributeInputType = "RepeatableAttribute"
	AttributeInputTypeTagsAttribute                  AttributeInputType = "TagsAttribute"
	AttributeInputTypeNumberAttribute                AttributeInputType = "NumberAttribute"
	AttributeInputTypeConsentAttribute               AttributeInputType = "ConsentAttribute"
	AttributeInputTypeInternalAttribute              AttributeInputType = "InternalAttribute"
	AttributeInputTypeOrderedListAttribute           AttributeInputType = "OrderedListAttribute"
	AttributeInputTypeFileAttribute                  AttributeInputType = "FileAttribute"
	AttributeInputTypeComputedAttribute              AttributeInputType = "ComputedAttribute"
	AttributeInputTypePartnerStatusAttribute         AttributeInputType = "PartnerStatusAttribute"
	AttributeInputTypeInvitationEmailAttribute       AttributeInputType = "InvitationEmailAttribute"
	AttributeInputTypeAutomationAttribute            AttributeInputType = "AutomationAttribute"
	AttributeInputTypeInternalUserAttribute          AttributeInputType = "InternalUserAttribute"
	AttributeInputTypePurposeAttributeInput          AttributeInputType = "PurposeAttribute_input"
	AttributeInputTypePartnerOrganisationAttribute   AttributeInputType = "PartnerOrganisationAttribute"
)

type AttributeInput struct {
	TextAttribute                  *TextAttribute                  `queryParam:"inline"`
	LinkAttribute                  *LinkAttribute                  `queryParam:"inline"`
	DateAttribute                  *DateAttribute                  `queryParam:"inline"`
	CountryAttribute               *CountryAttribute               `queryParam:"inline"`
	BooleanAttribute               *BooleanAttribute               `queryParam:"inline"`
	SelectAttribute                *SelectAttribute                `queryParam:"inline"`
	MultiSelectAttribute           *MultiSelectAttribute           `queryParam:"inline"`
	StatusAttribute                *StatusAttribute                `queryParam:"inline"`
	SequenceAttribute              *SequenceAttribute              `queryParam:"inline"`
	RelationAttributeInput         *RelationAttributeInput         `queryParam:"inline"`
	UserRelationAttribute          *UserRelationAttribute          `queryParam:"inline"`
	AddressRelationAttribute       *AddressRelationAttribute       `queryParam:"inline"`
	PaymentMethodRelationAttribute *PaymentMethodRelationAttribute `queryParam:"inline"`
	CurrencyAttribute              *CurrencyAttribute              `queryParam:"inline"`
	RepeatableAttribute            *RepeatableAttribute            `queryParam:"inline"`
	TagsAttribute                  *TagsAttribute                  `queryParam:"inline"`
	NumberAttribute                *NumberAttribute                `queryParam:"inline"`
	ConsentAttribute               *ConsentAttribute               `queryParam:"inline"`
	InternalAttribute              *InternalAttribute              `queryParam:"inline"`
	OrderedListAttribute           *OrderedListAttribute           `queryParam:"inline"`
	FileAttribute                  *FileAttribute                  `queryParam:"inline"`
	ComputedAttribute              *ComputedAttribute              `queryParam:"inline"`
	PartnerStatusAttribute         *PartnerStatusAttribute         `queryParam:"inline"`
	InvitationEmailAttribute       *InvitationEmailAttribute       `queryParam:"inline"`
	AutomationAttribute            *AutomationAttribute            `queryParam:"inline"`
	InternalUserAttribute          *InternalUserAttribute          `queryParam:"inline"`
	PurposeAttributeInput          *PurposeAttributeInput          `queryParam:"inline"`
	PartnerOrganisationAttribute   *PartnerOrganisationAttribute   `queryParam:"inline"`

	Type AttributeInputType
}

func CreateAttributeInputTextAttribute(textAttribute TextAttribute) AttributeInput {
	typ := AttributeInputTypeTextAttribute

	return AttributeInput{
		TextAttribute: &textAttribute,
		Type:          typ,
	}
}

func CreateAttributeInputLinkAttribute(linkAttribute LinkAttribute) AttributeInput {
	typ := AttributeInputTypeLinkAttribute

	return AttributeInput{
		LinkAttribute: &linkAttribute,
		Type:          typ,
	}
}

func CreateAttributeInputDateAttribute(dateAttribute DateAttribute) AttributeInput {
	typ := AttributeInputTypeDateAttribute

	return AttributeInput{
		DateAttribute: &dateAttribute,
		Type:          typ,
	}
}

func CreateAttributeInputCountryAttribute(countryAttribute CountryAttribute) AttributeInput {
	typ := AttributeInputTypeCountryAttribute

	return AttributeInput{
		CountryAttribute: &countryAttribute,
		Type:             typ,
	}
}

func CreateAttributeInputBooleanAttribute(booleanAttribute BooleanAttribute) AttributeInput {
	typ := AttributeInputTypeBooleanAttribute

	return AttributeInput{
		BooleanAttribute: &booleanAttribute,
		Type:             typ,
	}
}

func CreateAttributeInputSelectAttribute(selectAttribute SelectAttribute) AttributeInput {
	typ := AttributeInputTypeSelectAttribute

	return AttributeInput{
		SelectAttribute: &selectAttribute,
		Type:            typ,
	}
}

func CreateAttributeInputMultiSelectAttribute(multiSelectAttribute MultiSelectAttribute) AttributeInput {
	typ := AttributeInputTypeMultiSelectAttribute

	return AttributeInput{
		MultiSelectAttribute: &multiSelectAttribute,
		Type:                 typ,
	}
}

func CreateAttributeInputStatusAttribute(statusAttribute StatusAttribute) AttributeInput {
	typ := AttributeInputTypeStatusAttribute

	return AttributeInput{
		StatusAttribute: &statusAttribute,
		Type:            typ,
	}
}

func CreateAttributeInputSequenceAttribute(sequenceAttribute SequenceAttribute) AttributeInput {
	typ := AttributeInputTypeSequenceAttribute

	return AttributeInput{
		SequenceAttribute: &sequenceAttribute,
		Type:              typ,
	}
}

func CreateAttributeInputRelationAttributeInput(relationAttributeInput RelationAttributeInput) AttributeInput {
	typ := AttributeInputTypeRelationAttributeInput

	return AttributeInput{
		RelationAttributeInput: &relationAttributeInput,
		Type:                   typ,
	}
}

func CreateAttributeInputUserRelationAttribute(userRelationAttribute UserRelationAttribute) AttributeInput {
	typ := AttributeInputTypeUserRelationAttribute

	return AttributeInput{
		UserRelationAttribute: &userRelationAttribute,
		Type:                  typ,
	}
}

func CreateAttributeInputAddressRelationAttribute(addressRelationAttribute AddressRelationAttribute) AttributeInput {
	typ := AttributeInputTypeAddressRelationAttribute

	return AttributeInput{
		AddressRelationAttribute: &addressRelationAttribute,
		Type:                     typ,
	}
}

func CreateAttributeInputPaymentMethodRelationAttribute(paymentMethodRelationAttribute PaymentMethodRelationAttribute) AttributeInput {
	typ := AttributeInputTypePaymentMethodRelationAttribute

	return AttributeInput{
		PaymentMethodRelationAttribute: &paymentMethodRelationAttribute,
		Type:                           typ,
	}
}

func CreateAttributeInputCurrencyAttribute(currencyAttribute CurrencyAttribute) AttributeInput {
	typ := AttributeInputTypeCurrencyAttribute

	return AttributeInput{
		CurrencyAttribute: &currencyAttribute,
		Type:              typ,
	}
}

func CreateAttributeInputRepeatableAttribute(repeatableAttribute RepeatableAttribute) AttributeInput {
	typ := AttributeInputTypeRepeatableAttribute

	return AttributeInput{
		RepeatableAttribute: &repeatableAttribute,
		Type:                typ,
	}
}

func CreateAttributeInputTagsAttribute(tagsAttribute TagsAttribute) AttributeInput {
	typ := AttributeInputTypeTagsAttribute

	return AttributeInput{
		TagsAttribute: &tagsAttribute,
		Type:          typ,
	}
}

func CreateAttributeInputNumberAttribute(numberAttribute NumberAttribute) AttributeInput {
	typ := AttributeInputTypeNumberAttribute

	return AttributeInput{
		NumberAttribute: &numberAttribute,
		Type:            typ,
	}
}

func CreateAttributeInputConsentAttribute(consentAttribute ConsentAttribute) AttributeInput {
	typ := AttributeInputTypeConsentAttribute

	return AttributeInput{
		ConsentAttribute: &consentAttribute,
		Type:             typ,
	}
}

func CreateAttributeInputInternalAttribute(internalAttribute InternalAttribute) AttributeInput {
	typ := AttributeInputTypeInternalAttribute

	return AttributeInput{
		InternalAttribute: &internalAttribute,
		Type:              typ,
	}
}

func CreateAttributeInputOrderedListAttribute(orderedListAttribute OrderedListAttribute) AttributeInput {
	typ := AttributeInputTypeOrderedListAttribute

	return AttributeInput{
		OrderedListAttribute: &orderedListAttribute,
		Type:                 typ,
	}
}

func CreateAttributeInputFileAttribute(fileAttribute FileAttribute) AttributeInput {
	typ := AttributeInputTypeFileAttribute

	return AttributeInput{
		FileAttribute: &fileAttribute,
		Type:          typ,
	}
}

func CreateAttributeInputComputedAttribute(computedAttribute ComputedAttribute) AttributeInput {
	typ := AttributeInputTypeComputedAttribute

	return AttributeInput{
		ComputedAttribute: &computedAttribute,
		Type:              typ,
	}
}

func CreateAttributeInputPartnerStatusAttribute(partnerStatusAttribute PartnerStatusAttribute) AttributeInput {
	typ := AttributeInputTypePartnerStatusAttribute

	return AttributeInput{
		PartnerStatusAttribute: &partnerStatusAttribute,
		Type:                   typ,
	}
}

func CreateAttributeInputInvitationEmailAttribute(invitationEmailAttribute InvitationEmailAttribute) AttributeInput {
	typ := AttributeInputTypeInvitationEmailAttribute

	return AttributeInput{
		InvitationEmailAttribute: &invitationEmailAttribute,
		Type:                     typ,
	}
}

func CreateAttributeInputAutomationAttribute(automationAttribute AutomationAttribute) AttributeInput {
	typ := AttributeInputTypeAutomationAttribute

	return AttributeInput{
		AutomationAttribute: &automationAttribute,
		Type:                typ,
	}
}

func CreateAttributeInputInternalUserAttribute(internalUserAttribute InternalUserAttribute) AttributeInput {
	typ := AttributeInputTypeInternalUserAttribute

	return AttributeInput{
		InternalUserAttribute: &internalUserAttribute,
		Type:                  typ,
	}
}

func CreateAttributeInputPurposeAttributeInput(purposeAttributeInput PurposeAttributeInput) AttributeInput {
	typ := AttributeInputTypePurposeAttributeInput

	return AttributeInput{
		PurposeAttributeInput: &purposeAttributeInput,
		Type:                  typ,
	}
}

func CreateAttributeInputPartnerOrganisationAttribute(partnerOrganisationAttribute PartnerOrganisationAttribute) AttributeInput {
	typ := AttributeInputTypePartnerOrganisationAttribute

	return AttributeInput{
		PartnerOrganisationAttribute: &partnerOrganisationAttribute,
		Type:                         typ,
	}
}

func (u *AttributeInput) UnmarshalJSON(data []byte) error {

	var internalAttribute InternalAttribute = InternalAttribute{}
	if err := utils.UnmarshalJSON(data, &internalAttribute, "", true, true); err == nil {
		u.InternalAttribute = &internalAttribute
		u.Type = AttributeInputTypeInternalAttribute
		return nil
	}

	var linkAttribute LinkAttribute = LinkAttribute{}
	if err := utils.UnmarshalJSON(data, &linkAttribute, "", true, true); err == nil {
		u.LinkAttribute = &linkAttribute
		u.Type = AttributeInputTypeLinkAttribute
		return nil
	}

	var dateAttribute DateAttribute = DateAttribute{}
	if err := utils.UnmarshalJSON(data, &dateAttribute, "", true, true); err == nil {
		u.DateAttribute = &dateAttribute
		u.Type = AttributeInputTypeDateAttribute
		return nil
	}

	var countryAttribute CountryAttribute = CountryAttribute{}
	if err := utils.UnmarshalJSON(data, &countryAttribute, "", true, true); err == nil {
		u.CountryAttribute = &countryAttribute
		u.Type = AttributeInputTypeCountryAttribute
		return nil
	}

	var booleanAttribute BooleanAttribute = BooleanAttribute{}
	if err := utils.UnmarshalJSON(data, &booleanAttribute, "", true, true); err == nil {
		u.BooleanAttribute = &booleanAttribute
		u.Type = AttributeInputTypeBooleanAttribute
		return nil
	}

	var partnerOrganisationAttribute PartnerOrganisationAttribute = PartnerOrganisationAttribute{}
	if err := utils.UnmarshalJSON(data, &partnerOrganisationAttribute, "", true, true); err == nil {
		u.PartnerOrganisationAttribute = &partnerOrganisationAttribute
		u.Type = AttributeInputTypePartnerOrganisationAttribute
		return nil
	}

	var internalUserAttribute InternalUserAttribute = InternalUserAttribute{}
	if err := utils.UnmarshalJSON(data, &internalUserAttribute, "", true, true); err == nil {
		u.InternalUserAttribute = &internalUserAttribute
		u.Type = AttributeInputTypeInternalUserAttribute
		return nil
	}

	var automationAttribute AutomationAttribute = AutomationAttribute{}
	if err := utils.UnmarshalJSON(data, &automationAttribute, "", true, true); err == nil {
		u.AutomationAttribute = &automationAttribute
		u.Type = AttributeInputTypeAutomationAttribute
		return nil
	}

	var invitationEmailAttribute InvitationEmailAttribute = InvitationEmailAttribute{}
	if err := utils.UnmarshalJSON(data, &invitationEmailAttribute, "", true, true); err == nil {
		u.InvitationEmailAttribute = &invitationEmailAttribute
		u.Type = AttributeInputTypeInvitationEmailAttribute
		return nil
	}

	var partnerStatusAttribute PartnerStatusAttribute = PartnerStatusAttribute{}
	if err := utils.UnmarshalJSON(data, &partnerStatusAttribute, "", true, true); err == nil {
		u.PartnerStatusAttribute = &partnerStatusAttribute
		u.Type = AttributeInputTypePartnerStatusAttribute
		return nil
	}

	var computedAttribute ComputedAttribute = ComputedAttribute{}
	if err := utils.UnmarshalJSON(data, &computedAttribute, "", true, true); err == nil {
		u.ComputedAttribute = &computedAttribute
		u.Type = AttributeInputTypeComputedAttribute
		return nil
	}

	var orderedListAttribute OrderedListAttribute = OrderedListAttribute{}
	if err := utils.UnmarshalJSON(data, &orderedListAttribute, "", true, true); err == nil {
		u.OrderedListAttribute = &orderedListAttribute
		u.Type = AttributeInputTypeOrderedListAttribute
		return nil
	}

	var statusAttribute StatusAttribute = StatusAttribute{}
	if err := utils.UnmarshalJSON(data, &statusAttribute, "", true, true); err == nil {
		u.StatusAttribute = &statusAttribute
		u.Type = AttributeInputTypeStatusAttribute
		return nil
	}

	var paymentMethodRelationAttribute PaymentMethodRelationAttribute = PaymentMethodRelationAttribute{}
	if err := utils.UnmarshalJSON(data, &paymentMethodRelationAttribute, "", true, true); err == nil {
		u.PaymentMethodRelationAttribute = &paymentMethodRelationAttribute
		u.Type = AttributeInputTypePaymentMethodRelationAttribute
		return nil
	}

	var textAttribute TextAttribute = TextAttribute{}
	if err := utils.UnmarshalJSON(data, &textAttribute, "", true, true); err == nil {
		u.TextAttribute = &textAttribute
		u.Type = AttributeInputTypeTextAttribute
		return nil
	}

	var userRelationAttribute UserRelationAttribute = UserRelationAttribute{}
	if err := utils.UnmarshalJSON(data, &userRelationAttribute, "", true, true); err == nil {
		u.UserRelationAttribute = &userRelationAttribute
		u.Type = AttributeInputTypeUserRelationAttribute
		return nil
	}

	var addressRelationAttribute AddressRelationAttribute = AddressRelationAttribute{}
	if err := utils.UnmarshalJSON(data, &addressRelationAttribute, "", true, true); err == nil {
		u.AddressRelationAttribute = &addressRelationAttribute
		u.Type = AttributeInputTypeAddressRelationAttribute
		return nil
	}

	var numberAttribute NumberAttribute = NumberAttribute{}
	if err := utils.UnmarshalJSON(data, &numberAttribute, "", true, true); err == nil {
		u.NumberAttribute = &numberAttribute
		u.Type = AttributeInputTypeNumberAttribute
		return nil
	}

	var consentAttribute ConsentAttribute = ConsentAttribute{}
	if err := utils.UnmarshalJSON(data, &consentAttribute, "", true, true); err == nil {
		u.ConsentAttribute = &consentAttribute
		u.Type = AttributeInputTypeConsentAttribute
		return nil
	}

	var currencyAttribute CurrencyAttribute = CurrencyAttribute{}
	if err := utils.UnmarshalJSON(data, &currencyAttribute, "", true, true); err == nil {
		u.CurrencyAttribute = &currencyAttribute
		u.Type = AttributeInputTypeCurrencyAttribute
		return nil
	}

	var tagsAttribute TagsAttribute = TagsAttribute{}
	if err := utils.UnmarshalJSON(data, &tagsAttribute, "", true, true); err == nil {
		u.TagsAttribute = &tagsAttribute
		u.Type = AttributeInputTypeTagsAttribute
		return nil
	}

	var sequenceAttribute SequenceAttribute = SequenceAttribute{}
	if err := utils.UnmarshalJSON(data, &sequenceAttribute, "", true, true); err == nil {
		u.SequenceAttribute = &sequenceAttribute
		u.Type = AttributeInputTypeSequenceAttribute
		return nil
	}

	var purposeAttributeInput PurposeAttributeInput = PurposeAttributeInput{}
	if err := utils.UnmarshalJSON(data, &purposeAttributeInput, "", true, true); err == nil {
		u.PurposeAttributeInput = &purposeAttributeInput
		u.Type = AttributeInputTypePurposeAttributeInput
		return nil
	}

	var selectAttribute SelectAttribute = SelectAttribute{}
	if err := utils.UnmarshalJSON(data, &selectAttribute, "", true, true); err == nil {
		u.SelectAttribute = &selectAttribute
		u.Type = AttributeInputTypeSelectAttribute
		return nil
	}

	var repeatableAttribute RepeatableAttribute = RepeatableAttribute{}
	if err := utils.UnmarshalJSON(data, &repeatableAttribute, "", true, true); err == nil {
		u.RepeatableAttribute = &repeatableAttribute
		u.Type = AttributeInputTypeRepeatableAttribute
		return nil
	}

	var multiSelectAttribute MultiSelectAttribute = MultiSelectAttribute{}
	if err := utils.UnmarshalJSON(data, &multiSelectAttribute, "", true, true); err == nil {
		u.MultiSelectAttribute = &multiSelectAttribute
		u.Type = AttributeInputTypeMultiSelectAttribute
		return nil
	}

	var fileAttribute FileAttribute = FileAttribute{}
	if err := utils.UnmarshalJSON(data, &fileAttribute, "", true, true); err == nil {
		u.FileAttribute = &fileAttribute
		u.Type = AttributeInputTypeFileAttribute
		return nil
	}

	var relationAttributeInput RelationAttributeInput = RelationAttributeInput{}
	if err := utils.UnmarshalJSON(data, &relationAttributeInput, "", true, true); err == nil {
		u.RelationAttributeInput = &relationAttributeInput
		u.Type = AttributeInputTypeRelationAttributeInput
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for AttributeInput", string(data))
}

func (u AttributeInput) MarshalJSON() ([]byte, error) {
	if u.TextAttribute != nil {
		return utils.MarshalJSON(u.TextAttribute, "", true)
	}

	if u.LinkAttribute != nil {
		return utils.MarshalJSON(u.LinkAttribute, "", true)
	}

	if u.DateAttribute != nil {
		return utils.MarshalJSON(u.DateAttribute, "", true)
	}

	if u.CountryAttribute != nil {
		return utils.MarshalJSON(u.CountryAttribute, "", true)
	}

	if u.BooleanAttribute != nil {
		return utils.MarshalJSON(u.BooleanAttribute, "", true)
	}

	if u.SelectAttribute != nil {
		return utils.MarshalJSON(u.SelectAttribute, "", true)
	}

	if u.MultiSelectAttribute != nil {
		return utils.MarshalJSON(u.MultiSelectAttribute, "", true)
	}

	if u.StatusAttribute != nil {
		return utils.MarshalJSON(u.StatusAttribute, "", true)
	}

	if u.SequenceAttribute != nil {
		return utils.MarshalJSON(u.SequenceAttribute, "", true)
	}

	if u.RelationAttributeInput != nil {
		return utils.MarshalJSON(u.RelationAttributeInput, "", true)
	}

	if u.UserRelationAttribute != nil {
		return utils.MarshalJSON(u.UserRelationAttribute, "", true)
	}

	if u.AddressRelationAttribute != nil {
		return utils.MarshalJSON(u.AddressRelationAttribute, "", true)
	}

	if u.PaymentMethodRelationAttribute != nil {
		return utils.MarshalJSON(u.PaymentMethodRelationAttribute, "", true)
	}

	if u.CurrencyAttribute != nil {
		return utils.MarshalJSON(u.CurrencyAttribute, "", true)
	}

	if u.RepeatableAttribute != nil {
		return utils.MarshalJSON(u.RepeatableAttribute, "", true)
	}

	if u.TagsAttribute != nil {
		return utils.MarshalJSON(u.TagsAttribute, "", true)
	}

	if u.NumberAttribute != nil {
		return utils.MarshalJSON(u.NumberAttribute, "", true)
	}

	if u.ConsentAttribute != nil {
		return utils.MarshalJSON(u.ConsentAttribute, "", true)
	}

	if u.InternalAttribute != nil {
		return utils.MarshalJSON(u.InternalAttribute, "", true)
	}

	if u.OrderedListAttribute != nil {
		return utils.MarshalJSON(u.OrderedListAttribute, "", true)
	}

	if u.FileAttribute != nil {
		return utils.MarshalJSON(u.FileAttribute, "", true)
	}

	if u.ComputedAttribute != nil {
		return utils.MarshalJSON(u.ComputedAttribute, "", true)
	}

	if u.PartnerStatusAttribute != nil {
		return utils.MarshalJSON(u.PartnerStatusAttribute, "", true)
	}

	if u.InvitationEmailAttribute != nil {
		return utils.MarshalJSON(u.InvitationEmailAttribute, "", true)
	}

	if u.AutomationAttribute != nil {
		return utils.MarshalJSON(u.AutomationAttribute, "", true)
	}

	if u.InternalUserAttribute != nil {
		return utils.MarshalJSON(u.InternalUserAttribute, "", true)
	}

	if u.PurposeAttributeInput != nil {
		return utils.MarshalJSON(u.PurposeAttributeInput, "", true)
	}

	if u.PartnerOrganisationAttribute != nil {
		return utils.MarshalJSON(u.PartnerOrganisationAttribute, "", true)
	}

	return nil, errors.New("could not marshal union type AttributeInput: all fields are null")
}
