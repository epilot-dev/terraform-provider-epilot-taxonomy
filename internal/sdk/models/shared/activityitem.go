// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"time"
)

type ActivityItem struct {
	// See https://github.com/ulid/spec
	ID     *string                `json:"_id,omitempty"`
	Caller *ActivityCallerContext `json:"caller,omitempty"`
	// Message for activity. Supports handlebars syntax.
	Message    string            `json:"message"`
	Operations []EntityOperation `json:"operations,omitempty"`
	// Count of total operations attached to this activity
	OperationsTotal *int64         `json:"operations_total,omitempty"`
	Payload         map[string]any `json:"payload,omitempty"`
	// Indicates whether the activity is in the pending state.
	// Pending activities are not yet visible in the activity feed and events are not yet dispatched.
	//
	Pending   *bool      `default:"false" json:"pending"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// Title for activity. Supports handlebars syntax.
	Title string `json:"title"`
	Type  string `json:"type"`
}

func (a ActivityItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ActivityItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"message", "title", "type"}); err != nil {
		return err
	}
	return nil
}

func (o *ActivityItem) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ActivityItem) GetCaller() *ActivityCallerContext {
	if o == nil {
		return nil
	}
	return o.Caller
}

func (o *ActivityItem) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *ActivityItem) GetOperations() []EntityOperation {
	if o == nil {
		return nil
	}
	return o.Operations
}

func (o *ActivityItem) GetOperationsTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.OperationsTotal
}

func (o *ActivityItem) GetPayload() map[string]any {
	if o == nil {
		return nil
	}
	return o.Payload
}

func (o *ActivityItem) GetPending() *bool {
	if o == nil {
		return nil
	}
	return o.Pending
}

func (o *ActivityItem) GetTimestamp() *time.Time {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

func (o *ActivityItem) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *ActivityItem) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}
