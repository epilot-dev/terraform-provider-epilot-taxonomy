// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"time"
)

type Output struct {
	AffectedEntitiesCount *float64 `json:"affected_entities_count,omitempty"`
	FailedEntities        []string `json:"failed_entities,omitempty"`
	FailuresCount         *float64 `json:"failures_count,omitempty"`
	TargetEntitiesCount   *float64 `json:"target_entities_count,omitempty"`
}

func (o *Output) GetAffectedEntitiesCount() *float64 {
	if o == nil {
		return nil
	}
	return o.AffectedEntitiesCount
}

func (o *Output) GetFailedEntities() []string {
	if o == nil {
		return nil
	}
	return o.FailedEntities
}

func (o *Output) GetFailuresCount() *float64 {
	if o == nil {
		return nil
	}
	return o.FailuresCount
}

func (o *Output) GetTargetEntitiesCount() *float64 {
	if o == nil {
		return nil
	}
	return o.TargetEntitiesCount
}

type Request struct {
	ClassificationIds    []string `json:"classification_ids,omitempty"`
	TargetClassification *string  `json:"target_classification,omitempty"`
	// URL-friendly name for taxonomy
	TargetTaxonomy *string `json:"target_taxonomy,omitempty"`
}

func (r *Request) GetClassificationIds() []string {
	if r == nil {
		return nil
	}
	return r.ClassificationIds
}

func (r *Request) GetTargetClassification() *string {
	if r == nil {
		return nil
	}
	return r.TargetClassification
}

func (r *Request) GetTargetTaxonomy() *string {
	if r == nil {
		return nil
	}
	return r.TargetTaxonomy
}

type TaxonomyBulkJob struct {
	ActionType    *TaxonomyBulkJobActionType `json:"action_type,omitempty"`
	CreatedAt     *time.Time                 `json:"created_at,omitempty"`
	CreatedBy     *string                    `json:"created_by,omitempty"`
	FailureReason *string                    `json:"failure_reason,omitempty"`
	JobID         *string                    `json:"job_id,omitempty"`
	// The status of the bulk job
	JobStatus *TaxonomyBulkJobStatus `json:"job_status,omitempty"`
	Org       *string                `json:"org,omitempty"`
	Output    *Output                `json:"output,omitempty"`
	Request   *Request               `json:"request,omitempty"`
	UpdatedAt *time.Time             `json:"updated_at,omitempty"`
}

func (t TaxonomyBulkJob) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaxonomyBulkJob) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (t *TaxonomyBulkJob) GetActionType() *TaxonomyBulkJobActionType {
	if t == nil {
		return nil
	}
	return t.ActionType
}

func (t *TaxonomyBulkJob) GetCreatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.CreatedAt
}

func (t *TaxonomyBulkJob) GetCreatedBy() *string {
	if t == nil {
		return nil
	}
	return t.CreatedBy
}

func (t *TaxonomyBulkJob) GetFailureReason() *string {
	if t == nil {
		return nil
	}
	return t.FailureReason
}

func (t *TaxonomyBulkJob) GetJobID() *string {
	if t == nil {
		return nil
	}
	return t.JobID
}

func (t *TaxonomyBulkJob) GetJobStatus() *TaxonomyBulkJobStatus {
	if t == nil {
		return nil
	}
	return t.JobStatus
}

func (t *TaxonomyBulkJob) GetOrg() *string {
	if t == nil {
		return nil
	}
	return t.Org
}

func (t *TaxonomyBulkJob) GetOutput() *Output {
	if t == nil {
		return nil
	}
	return t.Output
}

func (t *TaxonomyBulkJob) GetRequest() *Request {
	if t == nil {
		return nil
	}
	return t.Request
}

func (t *TaxonomyBulkJob) GetUpdatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.UpdatedAt
}
