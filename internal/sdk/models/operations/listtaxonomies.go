// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"net/http"
)

// Type of taxonomy to include
type Type string

const (
	TypeEntity   Type = "entity"
	TypeRelation Type = "relation"
)

func (e Type) ToPointer() *Type {
	return &e
}
func (e *Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "entity":
		fallthrough
	case "relation":
		*e = Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Type: %v", v)
	}
}

type ListTaxonomiesRequest struct {
	// Include disabled taxonomies
	IncludeDisabled *bool `default:"false" queryParam:"style=form,explode=true,name=include_disabled"`
	// Type of taxonomy to include
	Type *Type `default:"entity" queryParam:"style=form,explode=true,name=type"`
}

func (l ListTaxonomiesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListTaxonomiesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListTaxonomiesRequest) GetIncludeDisabled() *bool {
	if l == nil {
		return nil
	}
	return l.IncludeDisabled
}

func (l *ListTaxonomiesRequest) GetType() *Type {
	if l == nil {
		return nil
	}
	return l.Type
}

// ListTaxonomiesResponseBody - Returns list of taxonomies in an organization
type ListTaxonomiesResponseBody struct {
	Results []shared.Taxonomy `json:"results,omitempty"`
}

func (l *ListTaxonomiesResponseBody) GetResults() []shared.Taxonomy {
	if l == nil {
		return nil
	}
	return l.Results
}

type ListTaxonomiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Returns list of taxonomies in an organization
	Object *ListTaxonomiesResponseBody
}

func (l *ListTaxonomiesResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListTaxonomiesResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListTaxonomiesResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}

func (l *ListTaxonomiesResponse) GetObject() *ListTaxonomiesResponseBody {
	if l == nil {
		return nil
	}
	return l.Object
}
