// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"net/http"
)

type ValidateEntityV2Request struct {
	Entity *shared.EntityInput `request:"mediaType=application/json"`
	// Entity Type
	Slug string `pathParam:"style=simple,explode=false,name=slug"`
}

func (v *ValidateEntityV2Request) GetEntity() *shared.EntityInput {
	if v == nil {
		return nil
	}
	return v.Entity
}

func (v *ValidateEntityV2Request) GetSlug() string {
	if v == nil {
		return ""
	}
	return v.Slug
}

// ValidateEntityV2ResponseBody - A generic error returned by the API
type ValidateEntityV2ResponseBody struct {
	// The error message
	Error *string `json:"error,omitempty"`
	// The HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
}

func (v *ValidateEntityV2ResponseBody) GetError() *string {
	if v == nil {
		return nil
	}
	return v.Error
}

func (v *ValidateEntityV2ResponseBody) GetStatus() *int64 {
	if v == nil {
		return nil
	}
	return v.Status
}

type ValidateEntityV2Response struct {
	// HTTP response content type for this operation
	ContentType string
	// Error
	EntityValidationV2ResultError *shared.EntityValidationV2ResultError
	// Success
	EntityValidationV2ResultSuccess *shared.EntityValidationV2ResultSuccess
	Headers                         map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Too many requests
	Object *ValidateEntityV2ResponseBody
}

func (v *ValidateEntityV2Response) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *ValidateEntityV2Response) GetEntityValidationV2ResultError() *shared.EntityValidationV2ResultError {
	if v == nil {
		return nil
	}
	return v.EntityValidationV2ResultError
}

func (v *ValidateEntityV2Response) GetEntityValidationV2ResultSuccess() *shared.EntityValidationV2ResultSuccess {
	if v == nil {
		return nil
	}
	return v.EntityValidationV2ResultSuccess
}

func (v *ValidateEntityV2Response) GetHeaders() map[string][]string {
	if v == nil {
		return map[string][]string{}
	}
	return v.Headers
}

func (v *ValidateEntityV2Response) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *ValidateEntityV2Response) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}

func (v *ValidateEntityV2Response) GetObject() *ValidateEntityV2ResponseBody {
	if v == nil {
		return nil
	}
	return v.Object
}
