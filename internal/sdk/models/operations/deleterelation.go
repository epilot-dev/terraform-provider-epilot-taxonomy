// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"net/http"
)

type DeleteRelationRequest struct {
	// Activity to include in event feed
	ActivityID *shared.ActivityIDQueryParam `queryParam:"style=form,explode=true,name=activity_id"`
	// Don't wait for updated entity to become available in Search API. Useful for large migrations
	Async *bool `default:"false" queryParam:"style=form,explode=true,name=async"`
	// The attribute that express meaning
	Attribute string `pathParam:"style=simple,explode=false,name=attribute"`
	// The attribute that express meaning
	EntityID string `pathParam:"style=simple,explode=false,name=entity_id"`
	// Entity id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Entity Type
	Slug string `pathParam:"style=simple,explode=false,name=slug"`
}

func (d DeleteRelationRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeleteRelationRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"attribute", "entity_id", "id", "slug"}); err != nil {
		return err
	}
	return nil
}

func (d *DeleteRelationRequest) GetActivityID() *shared.ActivityIDQueryParam {
	if d == nil {
		return nil
	}
	return d.ActivityID
}

func (d *DeleteRelationRequest) GetAsync() *bool {
	if d == nil {
		return nil
	}
	return d.Async
}

func (d *DeleteRelationRequest) GetAttribute() string {
	if d == nil {
		return ""
	}
	return d.Attribute
}

func (d *DeleteRelationRequest) GetEntityID() string {
	if d == nil {
		return ""
	}
	return d.EntityID
}

func (d *DeleteRelationRequest) GetID() string {
	if d == nil {
		return ""
	}
	return d.ID
}

func (d *DeleteRelationRequest) GetSlug() string {
	if d == nil {
		return ""
	}
	return d.Slug
}

// DeleteRelationResponseBody - A generic error returned by the API
type DeleteRelationResponseBody struct {
	// The error message
	Error *string `json:"error,omitempty"`
	// The HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
}

func (d *DeleteRelationResponseBody) GetError() *string {
	if d == nil {
		return nil
	}
	return d.Error
}

func (d *DeleteRelationResponseBody) GetStatus() *int64 {
	if d == nil {
		return nil
	}
	return d.Status
}

type DeleteRelationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The requested resource was not found
	Object *DeleteRelationResponseBody
}

func (d *DeleteRelationResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DeleteRelationResponse) GetHeaders() map[string][]string {
	if d == nil {
		return map[string][]string{}
	}
	return d.Headers
}

func (d *DeleteRelationResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DeleteRelationResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}

func (d *DeleteRelationResponse) GetObject() *DeleteRelationResponseBody {
	if d == nil {
		return nil
	}
	return d.Object
}
