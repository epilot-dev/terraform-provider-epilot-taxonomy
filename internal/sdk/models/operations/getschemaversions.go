// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"net/http"
)

type GetSchemaVersionsRequest struct {
	DraftsFrom *float64 `default:"0" queryParam:"style=form,explode=true,name=drafts_from"`
	DraftsSize *float64 `default:"0" queryParam:"style=form,explode=true,name=drafts_size"`
	Fields     []string `queryParam:"style=form,explode=false,name=fields"`
	// Entity Type
	Slug         string   `pathParam:"style=simple,explode=false,name=slug"`
	VersionsFrom *float64 `default:"0" queryParam:"style=form,explode=true,name=versions_from"`
	VersionsSize *float64 `default:"20" queryParam:"style=form,explode=true,name=versions_size"`
}

func (g GetSchemaVersionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetSchemaVersionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"slug"}); err != nil {
		return err
	}
	return nil
}

func (g *GetSchemaVersionsRequest) GetDraftsFrom() *float64 {
	if g == nil {
		return nil
	}
	return g.DraftsFrom
}

func (g *GetSchemaVersionsRequest) GetDraftsSize() *float64 {
	if g == nil {
		return nil
	}
	return g.DraftsSize
}

func (g *GetSchemaVersionsRequest) GetFields() []string {
	if g == nil {
		return nil
	}
	return g.Fields
}

func (g *GetSchemaVersionsRequest) GetSlug() string {
	if g == nil {
		return ""
	}
	return g.Slug
}

func (g *GetSchemaVersionsRequest) GetVersionsFrom() *float64 {
	if g == nil {
		return nil
	}
	return g.VersionsFrom
}

func (g *GetSchemaVersionsRequest) GetVersionsSize() *float64 {
	if g == nil {
		return nil
	}
	return g.VersionsSize
}

// GetSchemaVersionsResponseBody - Success
type GetSchemaVersionsResponseBody struct {
	Drafts []shared.EntitySchemaItem `json:"drafts,omitempty"`
	// Pagination: Whether more drafts are available
	DraftsMore *bool                     `json:"drafts_more,omitempty"`
	Versions   []shared.EntitySchemaItem `json:"versions"`
	// Pagination: Whether more versions are available
	VersionsMore bool `json:"versions_more"`
}

func (g *GetSchemaVersionsResponseBody) GetDrafts() []shared.EntitySchemaItem {
	if g == nil {
		return nil
	}
	return g.Drafts
}

func (g *GetSchemaVersionsResponseBody) GetDraftsMore() *bool {
	if g == nil {
		return nil
	}
	return g.DraftsMore
}

func (g *GetSchemaVersionsResponseBody) GetVersions() []shared.EntitySchemaItem {
	if g == nil {
		return []shared.EntitySchemaItem{}
	}
	return g.Versions
}

func (g *GetSchemaVersionsResponseBody) GetVersionsMore() bool {
	if g == nil {
		return false
	}
	return g.VersionsMore
}

type GetSchemaVersionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Object *GetSchemaVersionsResponseBody
}

func (g *GetSchemaVersionsResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetSchemaVersionsResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetSchemaVersionsResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetSchemaVersionsResponse) GetObject() *GetSchemaVersionsResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
