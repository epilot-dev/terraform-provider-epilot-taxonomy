// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"net/http"
)

type DeleteEntityRequest struct {
	// Activity to include in event feed
	ActivityID *shared.ActivityIDQueryParam `queryParam:"style=form,explode=true,name=activity_id"`
	// Entity id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Permanently deletes the entity when set to `true`
	Purge *bool `default:"false" queryParam:"style=form,explode=true,name=purge"`
	// Entity Type
	Slug string `pathParam:"style=simple,explode=false,name=slug"`
}

func (d DeleteEntityRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeleteEntityRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"id", "slug"}); err != nil {
		return err
	}
	return nil
}

func (o *DeleteEntityRequest) GetActivityID() *shared.ActivityIDQueryParam {
	if o == nil {
		return nil
	}
	return o.ActivityID
}

func (o *DeleteEntityRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeleteEntityRequest) GetPurge() *bool {
	if o == nil {
		return nil
	}
	return o.Purge
}

func (o *DeleteEntityRequest) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

// DeleteEntityResponseBody - A generic error returned by the API
type DeleteEntityResponseBody struct {
	// The error message
	Error *string `json:"error,omitempty"`
	// The HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
}

func (o *DeleteEntityResponseBody) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *DeleteEntityResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type DeleteEntityResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Too many requests
	Object *DeleteEntityResponseBody
}

func (o *DeleteEntityResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteEntityResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}

func (o *DeleteEntityResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteEntityResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteEntityResponse) GetObject() *DeleteEntityResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
