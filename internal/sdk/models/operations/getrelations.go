// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"net/http"
)

type GetRelationsRequest struct {
	// Filter results to exclude schemas
	ExcludeSchemas []string `queryParam:"style=form,explode=false,name=exclude_schemas"`
	// Starting page number
	From *int64 `default:"0" queryParam:"style=form,explode=true,name=from"`
	// When true, enables entity hydration to resolve nested $relation & $relation_ref references in-place.
	Hydrate *bool `default:"false" queryParam:"style=form,explode=true,name=hydrate"`
	// Entity id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// When true, includes reverse relations in response (other entities pointing to this entity)
	IncludeReverse *bool `default:"false" queryParam:"style=form,explode=true,name=include_reverse"`
	// Filter results to only include schemas
	IncludeSchemas []string `queryParam:"style=form,explode=false,name=include_schemas"`
	// Number of results to return per page
	Size *int64 `default:"100" queryParam:"style=form,explode=true,name=size"`
	// Entity Type
	Slug string `pathParam:"style=simple,explode=false,name=slug"`
}

func (g GetRelationsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetRelationsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"id", "slug"}); err != nil {
		return err
	}
	return nil
}

func (o *GetRelationsRequest) GetExcludeSchemas() []string {
	if o == nil {
		return nil
	}
	return o.ExcludeSchemas
}

func (o *GetRelationsRequest) GetFrom() *int64 {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *GetRelationsRequest) GetHydrate() *bool {
	if o == nil {
		return nil
	}
	return o.Hydrate
}

func (o *GetRelationsRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetRelationsRequest) GetIncludeReverse() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeReverse
}

func (o *GetRelationsRequest) GetIncludeSchemas() []string {
	if o == nil {
		return nil
	}
	return o.IncludeSchemas
}

func (o *GetRelationsRequest) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *GetRelationsRequest) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

// GetRelationsResponseBody - A generic error returned by the API
type GetRelationsResponseBody struct {
	// The error message
	Error *string `json:"error,omitempty"`
	// The HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
}

func (o *GetRelationsResponseBody) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *GetRelationsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetRelationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Success
	GetRelationsResp []shared.GetRelationsResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The requested resource was not found
	Object *GetRelationsResponseBody
}

func (o *GetRelationsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetRelationsResponse) GetGetRelationsResp() []shared.GetRelationsResp {
	if o == nil {
		return nil
	}
	return o.GetRelationsResp
}

func (o *GetRelationsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetRelationsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetRelationsResponse) GetObject() *GetRelationsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
