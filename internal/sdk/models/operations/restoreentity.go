// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/models/shared"
	"net/http"
)

// RestoreEntityRequestBody - This endpoint doesn't require a payload, but an empty object can be sent to satisfy certain HTTP clients.
type RestoreEntityRequestBody struct {
}

type RestoreEntityRequest struct {
	RequestBody *RestoreEntityRequestBody `request:"mediaType=application/json"`
	// Activity to include in event feed
	ActivityID *shared.ActivityIDQueryParam `queryParam:"style=form,explode=true,name=activity_id"`
	// Entity id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Entity Type
	Slug string `pathParam:"style=simple,explode=false,name=slug"`
}

func (o *RestoreEntityRequest) GetRequestBody() *RestoreEntityRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *RestoreEntityRequest) GetActivityID() *shared.ActivityIDQueryParam {
	if o == nil {
		return nil
	}
	return o.ActivityID
}

func (o *RestoreEntityRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *RestoreEntityRequest) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

// RestoreEntityResponseBody - A generic error returned by the API
type RestoreEntityResponseBody struct {
	// The error message
	Error *string `json:"error,omitempty"`
	// The HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
}

func (o *RestoreEntityResponseBody) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *RestoreEntityResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type RestoreEntityResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// The restored entity
	EntityItem *shared.EntityItem
	Headers    map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Too many requests
	Object *RestoreEntityResponseBody
}

func (o *RestoreEntityResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RestoreEntityResponse) GetEntityItem() *shared.EntityItem {
	if o == nil {
		return nil
	}
	return o.EntityItem
}

func (o *RestoreEntityResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}

func (o *RestoreEntityResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RestoreEntityResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RestoreEntityResponse) GetObject() *RestoreEntityResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
